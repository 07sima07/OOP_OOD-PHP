<?php
/**
 * Created by PhpStorm.
 * User: max
 * Date: 24.02.2018
 * Time: 13:25
 */

namespace Core\Composite;

use Core\Visitor\ArmyVisitor;

abstract class CompositeArmy extends Unit
{
    private $depth = 0;
    private $units = array();

    function getComposite()
    {
        return $this;
    }

    function accept(ArmyVisitor $visitor)
    {
        parent::accept($visitor);
        foreach ($this->units as $thisUnit) {
            $thisUnit->accept($visitor);
        }
    }

    function addUnit(Unit $unit)
    {
        if (in_array($unit, $this->units, true)) {
            return;
        }
        if((count($this->units)+count($unit)) > 10) {
            throw new \Exception('Maximum 10 units');
        }
        $this->units[] = $unit;
        $this->setDepth( $this->getDepth() + 1);
    }

    function removeUnit(Unit $unit)
    {
        parent::removeUnit($unit); // TODO: Change the autogenerated stub
    }

    function getUnits()
    {
        return $this->units;
    }

    function bombardStrength() : int
    {
        return 0;
    }

}